// 1. Enable the vector extension in your PostgreSQL instance first.
// CREATE EXTENSION IF NOT EXISTS vector;

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                 String              @id @default(cuid())
  whatsappNumber     String              @unique
  createdAt          DateTime            @default(now())
  messages           ChatMessage[]
  portfolioSnapshots PortfolioSnapshot[]
  walletAddresses    WalletAddress[]
  exchangeKeys       ExchangeApiKey[]
  positions          Position[]
}

model ExchangeApiKey {
  id                  String   @id @default(cuid())
  userId              String
  exchange            String // "binance", "binance-futures", "bybit", "kraken"
  encryptedApiKey     String
  encryptedApiSecret  String
  encryptedPassphrase String? // For exchanges that require passphrase
  isActive            Boolean  @default(true)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, exchange]) // One API key per exchange per user
}

model WalletAddress {
  id        String   @id @default(cuid())
  address   String
  label     String? // Optional label for the wallet
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, address]) // Prevent duplicate addresses for same user
}

model Position {
  id            String   @id @default(cuid())
  userId        String
  exchange      String // "binance-futures", "bybit", etc.
  symbol        String // "BTC/USDT:USDT", "ETH/USDT:USDT"
  side          String // "long", "short"
  size          Float // Position size
  notional      Float? // Notional value
  entryPrice    Float? // Entry price
  markPrice     Float? // Current mark price
  percentage    Float? // P&L percentage
  unrealizedPnl Float? // Unrealized P&L in USDT
  realizedPnl   Float? // Realized P&L in USDT
  marginType    String? // "isolated", "cross"
  leverage      Float? // Leverage multiplier
  timestamp     DateTime @default(now())
  isActive      Boolean  @default(true)
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, exchange, symbol]) // One position per symbol per exchange per user
}

model ChatMessage {
  id        String   @id @default(cuid())
  content   String
  sender    String // "USER" or "AGENT"
  timestamp DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model PortfolioSnapshot {
  id        String   @id @default(cuid())
  timestamp DateTime @default(now())
  data      Json // JSON blob of portfolio data from CCXT
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model KnowledgeArticle {
  id        String                       @id @default(cuid())
  content   String
  author    String?
  source    String?
  tags      String[]
  embedding Unsupported("vector(1536)")?
}

model AgentPrompt {
  id          String   @id @default(cuid())
  name        String   @unique // e.g., "portfolio_quote", "emotional_support", "general_response"
  title       String // Human-readable title
  description String? // What this prompt is used for
  content     String // The actual prompt text
  category    String // "portfolio", "emotional", "general", "knowledge"
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
